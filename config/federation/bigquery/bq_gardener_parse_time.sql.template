#standardSQL
-- bq_gardener_parse_time calculates the maximum age of parse_times in
-- seconds for each gardener managed datatype.
--
-- This query exports one metric:
--
--   bq_gardener_parse_time_age_days -- (CURRENT_TIMESTAMP() - MIN(parse_time))
--       in days, labeled with the datatype name.
--
-- Each metric above also has a "datatype" label.
--
-- TODO(https://github.com/m-lab/dev-tracker/issues/496): once parsers write
-- directly to canonical tables for k8s platform data, enumerate all supported
-- datatypes.

SELECT
  TIMESTAMP_DIFF(CURRENT_TIMESTAMP(), min_parse_time, SECOND) / 86400.0 AS value_age_days,
  datatype
FROM (
    SELECT "ndt/web100" AS datatype, MIN(parse_time) AS min_parse_time
    FROM   `{{PROJECT}}.ndt.web100`
  UNION ALL
    SELECT "sidestream/web100" AS datatype, MIN(parse_time) AS min_parse_time
    FROM   `{{PROJECT}}.sidestream.web100`
  UNION ALL
    SELECT "utilization/switch" AS datatype, MIN(parse_time) AS min_parse_time
    FROM   `{{PROJECT}}.utilization.switch`
  UNION ALL
    SELECT "ndt/traceroute" AS datatype, MIN(ParseInfo.ParseTime) AS min_parse_time
    FROM   `{{PROJECT}}.ndt.traceroute`
  UNION ALL
    SELECT "ndt/tcpinfo" AS datatype, MIN(ParseInfo.ParseTime) AS min_parse_time
    FROM   `{{PROJECT}}.ndt.tcpinfo`
  UNION ALL
    SELECT "ndt/ndt5" AS datatype, MIN(ParseInfo.ParseTime) AS min_parse_time
    FROM   `{{PROJECT}}.ndt.ndt5`
)
