#standardSQL
-- bq_gardener_historical counts the number of historical dates
-- processed in the last 24 hours for each v2 datatype.

WITH all_types AS (
  SELECT
    "ndt7" AS datatype,
    id,
    date,
    parser.Time as parseTime,
  FROM
    `{{PROJECT}}.raw_ndt.ndt7`
  WHERE
    date > date('2019-01-01')
  UNION ALL
  SELECT
    "ndt5" AS datatype,
    id,
    date,
    parser.Time as parseTime,
  FROM
    `{{PROJECT}}.raw_ndt.ndt5`
  WHERE
    date > date('2019-01-01')
  UNION ALL
  SELECT
    "annotation" AS datatype,
    id,
    date,
    parser.Time as parseTime,
  FROM
    `{{PROJECT}}.raw_ndt.annotation`
  WHERE
    date > date('2019-01-01')
  UNION ALL
  SELECT
    "hopannotation1" AS datatype,
    id,
    date,
    parser.Time as parseTime,
  FROM
    `{{PROJECT}}.raw_ndt.hopannotation1`
  WHERE
    date > date('2019-01-01')
  UNION ALL
  SELECT
    "pcap" AS datatype,
    id,
    date,
    parser.Time as parseTime,
  FROM
    `{{PROJECT}}.raw_ndt.pcap`
  WHERE
    date > date('2019-01-01')
  UNION ALL
  SELECT
    "scamper1" AS datatype,
    id,
    date,
    parser.Time as parseTime,
  FROM
    `{{PROJECT}}.raw_ndt.scamper1`
  WHERE
    date > date('2019-03-28')
  UNION ALL
  SELECT
    "switch" AS datatype,
    id,
    date,
    parser.Time as parseTime,
  FROM
    `{{PROJECT}}.raw_utilization.switch`
  WHERE
    date > date('2015-11-19')
  UNION ALL
  SELECT
   "tcpinfo" AS datatype,
   id,
   date,
   parser.Time as parseTime,
  FROM
    `{{PROJECT}}.raw_ndt.tcpinfo`
  WHERE
    date > DATE('2019-01-01')
),

processed_types AS (
  SELECT
    datatype,
    COUNT(distinct date) AS value_throughput
  FROM
    all_types
  WHERE
    (parseTime BETWEEN TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR) AND CURRENT_TIMESTAMP())
    AND date < DATE_SUB(DATE(parseTime), INTERVAL 1 DAY) -- exclude daily.
  GROUP BY
    datatype
)

SELECT
  datatype, value_throughput
FROM processed_types
UNION ALL
-- export 0 throughput for data types that were not processed
SELECT
  all_types.datatype, 0 AS value_throughput
FROM
  all_types LEFT JOIN processed_types
  ON (all_types.datatype = processed_types.datatype)
WHERE
  processed_types.datatype IS NULL
GROUP BY
  datatype
