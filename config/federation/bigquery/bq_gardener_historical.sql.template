#standardSQL
WITH all_types AS (
  SELECT
    "raw_ndt.ndt7" AS datatype,
    id,
    date,
    parser.Time as parseTime,
  FROM
    `{{PROJECT}}.raw_ndt.ndt7`
  WHERE date > date('2019-01-01')
  UNION ALL
  SELECT
    "raw_ndt.annotation" AS datatype,
    id,
    date,
    parser.Time as parseTime,
  FROM
    `{{PROJECT}}.raw_ndt.annotation`
  WHERE date > date('2019-01-01')
  UNION ALL
  SELECT
    "raw_ndt.hopannotation1" AS datatype,
    id,
    date,
    parser.Time as parseTime,
  FROM
    `{{PROJECT}}.raw_ndt.hopannotation1`
  WHERE date > date('2019-01-01')
  UNION ALL
  SELECT
    "raw_ndt.pcap" AS datatype,
    id,
    date,
    parser.Time as parseTime,
  FROM
    `{{PROJECT}}.raw_ndt.pcap`
  WHERE date > date('2019-01-01')
  UNION ALL
  SELECT
    "raw_ndt.scamper1" AS datatype,
    id,
    date,
    parser.Time as parseTime,
  FROM
    `{{PROJECT}}.raw_ndt.scamper1`
  WHERE date > date('2019-03-28')
  UNION ALL
  -- ndt.ndt7 is generated by gardener by joining the raw ndt7 and raw annotation tables.
  SELECT
    "ndt.ndt7" AS datatype,
    id,
    date,
    parser.Time as parseTime,
  FROM
    `{{PROJECT}}.ndt.ndt7`
  WHERE date > date('2019-01-01')
  UNION ALL
  -- ndt.scamper1 is generated by gardener by joining the raw scamper1 and raw annotation tables.
  SELECT
    "ndt.scamper1" AS datatype,
    id,
    date,
    parser.Time as parseTime,
  FROM
    `{{PROJECT}}.ndt.scamper1`
  WHERE date > date('2019-03-28')
),

SELECT datatype, date, COUNT(id) AS value_throughput
FROM all_types
WHERE parseTime BETWEEN TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 24 HOUR)
    AND CURRENT_TIMESTAMP()
   	AND date < DATE_SUB(CURRENT_DATE(), INTERVAL 1 DAY)
GROUP BY datatype, date
