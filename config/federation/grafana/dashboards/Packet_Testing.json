{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 12,
      "panels": [],
      "title": "Distributions",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-bigquery-datasource",
        "uid": "PB00E94094811FA13"
      },
      "gridPos": {
        "h": 15,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "id": 13,
      "maxDataPoints": 80000,
      "options": {
        "config": {
          "displayModeBar": false
        },
        "data": [],
        "layout": {
          "font": {
            "color": "grey"
          },
          "margin": {
            "b": 50,
            "l": 50,
            "r": 50,
            "t": 10
          },
          "paper_bgcolor": "rgba(0, 0, 0, 0)",
          "plot_bgcolor": "rgba(0, 0, 0, 0)",
          "xaxis": {
            "autorange": true,
            "gridcolor": "#333",
            "range": [
              -0.013228265733755159,
              3.469998642218747
            ],
            "title": {
              "text": "Mbps"
            },
            "type": "log"
          },
          "yaxis": {
            "autorange": true,
            "gridcolor": "#333",
            "range": [
              -0.0028300316297652744,
              0.0537706009655402
            ],
            "title": {
              "text": "Frequency"
            },
            "type": "linear"
          }
        },
        "onclick": "console.log(\"okay\");\nconsole.log(data)\n// window.updateVariables({query:{'var-project':'test'}, partial: true})",
        "script": "console.log(data);\nvar types = {};\n\nvar x = data.series[0].fields[0].values.concat(data.series[1].fields[0].values);\nvar y = data.series[0].fields[1].values.concat(data.series[1].fields[1].values);\nvar names = data.series[0].fields[2].values.concat(data.series[1].fields[2].values);\n\nnames.forEach(type => {\n  types[type] = {\n    x: [],\n    y: [],\n    name: type,\n    line: {\n      width: 1\n    }\n  }\n}); \nx.forEach((xv, i) => {\n  types[names[i]].x.push(x[i]);\n  types[names[i]].y.push(y[i]);\n})\nvar data = [];\nObject.keys(types).sort().forEach(type => {\n  data.push(types[type]);\n});\nconsole.log(data);\nvar trace = {\n  x: x,\n  y: y,\n  name: names\n};\nconsole.log(\"okay2\");\nconsole.log(trace);\nreturn {data:data};"
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "PB00E94094811FA13"
          },
          "editorMode": "code",
          "format": 1,
          "location": "US",
          "project": "mlab-oti",
          "rawQuery": true,
          "rawSql": "WITH steps AS (\n  SELECT x, POW(10, x-.01) AS bucket_left, POW(10, x+.01) AS bucket_right\n  FROM UNNEST(GENERATE_ARRAY(0, 3.5, .02)) AS x\n), \n\n-- Get all the pt data.\npt AS (\n  SELECT ARRAY_REVERSE(raw.Download.ServerMeasurements)[SAFE_OFFSET(0)].TCPInfo AS tcpinfo, \n    metadata.Value AS session_id, \n  FROM `mlab-oti.raw_pt.ndt7`, UNNEST (raw.Download.ClientMetadata) AS metadata\n  WHERE date BETWEEN \"${__from:date:YYYY-MM-DD}\" AND \"${__to:date:YYYY-MM-DD}\"\n  AND raw.Download is not NULL \n  AND ARRAY_LENGTH(raw.Download.ServerMeasurements) > 0\n  AND metadata.Name = \"client_session_id\"\n),\n\n-- Select only ndt7 tests with matching pt tests.\nndt7 AS (\n  SELECT ARRAY_REVERSE(raw.Download.ServerMeasurements)[SAFE_OFFSET(0)].TCPInfo AS tcpinfo, \n    \"Full length\" AS test_type,\n  FROM `mlab-oti.ndt.ndt7`, UNNEST (raw.Download.ClientMetadata) AS metadata\n  WHERE date BETWEEN \"${__from:date:YYYY-MM-DD}\" AND \"${__to:date:YYYY-MM-DD}\"\n  AND raw.Download is not NULL \n  AND ARRAY_LENGTH(raw.Download.ServerMeasurements) > 0\n  AND metadata.Name = \"client_session_id\"\n  AND metadata.Value IN (SELECT session_id FROM pt)\n),\n\npdf_sort AS (\n  SELECT bucket_left, bucket_right, test_type, IF((SAFE_DIVIDE(tcpinfo.BytesAcked*8,tcpinfo.ElapsedTime)) BETWEEN bucket_left AND bucket_right, 1, 0) AS present_true\n  FROM ndt7, steps\n), pdf_totals AS (  \n  SELECT bucket_left AS buckets, test_type, sum(present_true) AS total_true\n  FROM   pdf_sort\n  GROUP BY bucket_left, test_type\n  ORDER BY bucket_left\n), pdf_product  AS (\n  SELECT\n    total_true,\n    test_type,\n    trunc(buckets,2) as buckets,\n    total_true AS product_true,\n  FROM pdf_totals\n  ORDER BY buckets\n), pdf_normalized AS (\n  SELECT  \n    buckets,\n    test_type,\n    product_true / SUM(product_true) OVER (partition BY test_type) AS normalized,\n    \n  FROM pdf_product\n  ORDER BY buckets\n)\nSELECT\n  buckets,\n  normalized,\n  test_type,\n\nFROM pdf_normalized",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "PB00E94094811FA13"
          },
          "editorMode": "code",
          "format": 1,
          "hide": false,
          "location": "",
          "project": "mlab-sandbox",
          "rawQuery": true,
          "rawSql": "WITH steps AS (\n  SELECT x, POW(10, x-.01) AS bucket_left, POW(10, x+.01) AS bucket_right\n  FROM UNNEST(GENERATE_ARRAY(0, 3.5, .02)) AS x\n), \n\n-- Select only pt tests with matching ndt7 tests.\npt AS (\n  SELECT ARRAY_REVERSE(raw.Download.ServerMeasurements)[SAFE_OFFSET(0)].TCPInfo AS tcpinfo, \n    metadata.Value AS session_id, \n    CASE\n      WHEN (\"max_cwnd_gain\" IN (SELECT metadata.Name FROM UNNEST(raw.Download.ClientMetadata) AS metadata)) AND (\"early_exit\" IN (SELECT metadata.Name FROM UNNEST(raw.Download.ClientMetadata) AS metadata)) THEN \"BBR and 50MB\"\n      WHEN (\"max_cwnd_gain\" IN (SELECT metadata.Name FROM UNNEST(raw.Download.ClientMetadata) AS metadata)) AND (\"max_elapsed_time\" IN (SELECT metadata.Name FROM UNNEST(raw.Download.ClientMetadata) AS metadata)) THEN \"BBR and 5s\"\n      WHEN (\"early_exit\" IN (SELECT metadata.Name FROM UNNEST(raw.Download.ClientMetadata) AS metadata)) THEN \"50MB\"\n      WHEN (\"max_elapsed_time\" IN (SELECT metadata.Name FROM UNNEST(raw.Download.ClientMetadata) AS metadata)) THEN \"5s\"\n      ELSE \"BBR\"      \n  END AS test_type,\n  FROM `mlab-oti.raw_pt.ndt7`, UNNEST (raw.Download.ClientMetadata) AS metadata\n  WHERE date BETWEEN \"${__from:date:YYYY-MM-DD}\" AND \"${__to:date:YYYY-MM-DD}\"\n  AND raw.Download is not NULL \n  AND ARRAY_LENGTH(raw.Download.ServerMeasurements) > 0\n  AND \"client_session_id\" IN (SELECT metadata.Name FROM UNNEST(raw.Download.ClientMetadata) AS metadata)\n),\n\npdf_sort AS (\n  SELECT bucket_left, bucket_right, test_type, IF((SAFE_DIVIDE(tcpinfo.BytesAcked*8,tcpinfo.ElapsedTime)) BETWEEN bucket_left AND bucket_right, 1, 0) AS present_true\n  FROM pt, steps\n), pdf_totals AS (  \n  SELECT bucket_left AS buckets, test_type, sum(present_true) AS total_true\n  FROM   pdf_sort\n  GROUP BY bucket_left, test_type\n  ORDER BY bucket_left\n), pdf_product  AS (\n  SELECT\n    total_true,\n    test_type,\n    trunc(buckets,2) as buckets,\n    total_true AS product_true,\n  FROM pdf_totals\n  ORDER BY buckets\n), pdf_normalized AS (\n  SELECT  \n    buckets,\n    test_type,\n    product_true / SUM(product_true) OVER (partition BY test_type) AS normalized,\n    \n  FROM pdf_product\n  ORDER BY buckets\n)\nSELECT\n  buckets,\n  normalized,\n  test_type,\n\nFROM pdf_normalized",
          "refId": "B",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "BBR-terminated vs. full length test (Download Mbps PDF, normalized)",
      "type": "ae3e-plotly-panel"
    },
    {
      "datasource": {
        "type": "grafana-bigquery-datasource",
        "uid": "PB00E94094811FA13"
      },
      "description": "Display the throughput distribution using the snapshot after the BBR pipe full signal. The \"cumulative\" line shows the throughput from the beginning of the test until the selected snapshot. The \"current\" line shows the throughput from the snapshot right before (pipe full signal) until the selected snapshot.",
      "gridPos": {
        "h": 15,
        "w": 24,
        "x": 0,
        "y": 16
      },
      "id": 16,
      "maxDataPoints": 80000,
      "options": {
        "config": {
          "displayModeBar": false
        },
        "data": [],
        "layout": {
          "font": {
            "color": "grey"
          },
          "margin": {
            "b": 50,
            "l": 50,
            "r": 50,
            "t": 10
          },
          "paper_bgcolor": "rgba(0, 0, 0, 0)",
          "plot_bgcolor": "rgba(0, 0, 0, 0)",
          "xaxis": {
            "autorange": true,
            "gridcolor": "#333",
            "range": [
              -0.013228265733755159,
              3.469998642218747
            ],
            "title": {
              "text": "Mbps"
            },
            "type": "log"
          },
          "yaxis": {
            "autorange": true,
            "gridcolor": "#333",
            "range": [
              -0.0010984514417780144,
              0.02101684380509914
            ],
            "title": {
              "text": "Frequency"
            },
            "type": "linear"
          }
        },
        "onclick": "console.log(\"okay\");\nconsole.log(data)\n// window.updateVariables({query:{'var-project':'test'}, partial: true})",
        "script": "console.log(data);\nvar types = {};\n\nvar x = data.series[0].fields[0].values;\nvar y = data.series[0].fields[1].values;\nvar names = data.series[0].fields[2].values;\n\nnames.forEach(type => {\n  types[type] = {\n    x: [],\n    y: [],\n    name: type,\n    line: {\n      width: 1\n    }\n  }\n}); \nx.forEach((xv, i) => {\n  types[names[i]].x.push(x[i]);\n  types[names[i]].y.push(y[i]);\n})\nvar data = [];\nObject.keys(types).sort().forEach(type => {\n  data.push(types[type]);\n});\nconsole.log(data);\nvar trace = {\n  x: x,\n  y: y,\n  name: names\n};\nconsole.log(\"okay2\");\nconsole.log(trace);\nreturn {data:data};"
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "PB00E94094811FA13"
          },
          "editorMode": "code",
          "format": 1,
          "location": "US",
          "project": "mlab-oti",
          "rawQuery": true,
          "rawSql": "WITH steps AS (\n  SELECT x, POW(10, x-.01) AS bucket_left, POW(10, x+.01) AS bucket_right\n  FROM UNNEST(GENERATE_ARRAY(0, 3.5, .02)) AS x\n), \n\nsnapshots AS (\n  SELECT raw.Download.UUID, raw.Download.ServerMeasurements AS serverMeasurements\n  FROM `mlab-oti.ndt.ndt7`\n  WHERE date BETWEEN \"${__from:date:YYYY-MM-DD}\" AND \"${__to:date:YYYY-MM-DD}\"\n  AND raw.Download is not NULL\n  AND ARRAY_LENGTH(raw.Download.ServerMeasurements) >= 3\n),\n\nfiltered AS (\n  SELECT UUID, \n    ARRAY_REVERSE(serverMeasurements)[SAFE_OFFSET(0)] AS fullTest, \n    ARRAY(\n      SELECT m \n      FROM UNNEST(serverMeasurements) AS m \n      WHERE m.BBRInfo.CwndGain >= 512\n      ORDER BY m.TCPInfo.ElapsedTime ASC\n    ) AS pipefull\n  FROM snapshots\n),\n\nselected AS (\n  SELECT UUID, fullTest, pipefull[SAFE_OFFSET(0)] AS pf, pipefull[SAFE_OFFSET(1)] AS pf2\n  FROM filtered\n),\n\nresults AS (\n  SELECT \n    SAFE_DIVIDE(fullTest.TCPInfo.BytesAcked * 8, fullTest.TCPInfo.ElapsedTime) AS fullTest,\n    SAFE_DIVIDE(pf2.TCPInfo.BytesAcked * 8, pf2.TCPInfo.ElapsedTime) AS afterPipefullCumulative,\n    SAFE_DIVIDE((pf2.TCPInfo.BytesAcked - pf.TCPInfo.BytesAcked) * 8, (pf2.TCPInfo.ElapsedTime - pf.TCPInfo.ElapsedTime)) AS afterPipefullCurrent,\n  FROM selected\n  WHERE \n    fullTest IS NOT NULL\n    AND pf IS NOT NULL\n    AND pf2 IS NOT NULL\n),\n\njoined AS (\n  SELECT fullTest AS mbps, \"Full Test\" AS test_type\n  FROM results\n  UNION ALL\n  SELECT afterPipefullCumulative AS mbps, \"After pipefull cumulative\" AS test_type\n  FROM results\n  UNION ALL\n  SELECT afterPipefullCurrent AS mbps, \"After pipefull current\" AS test_type\n  FROM results\n),\n\npdf_sort AS (\n  SELECT bucket_left, bucket_right, test_type, IF((mbps) BETWEEN bucket_left AND bucket_right, 1, 0) AS present_true\n  FROM joined, steps\n), pdf_totals AS (  \n  SELECT bucket_left AS buckets, test_type, sum(present_true) AS total_true\n  FROM   pdf_sort\n  GROUP BY bucket_left, test_type\n  ORDER BY bucket_left\n), pdf_product  AS (\n  SELECT\n    total_true,\n    test_type,\n    trunc(buckets,2) as buckets,\n    total_true AS product_true,\n  FROM pdf_totals\n  ORDER BY buckets\n), pdf_normalized AS (\n  SELECT  \n    buckets,\n    test_type,\n    product_true / SUM(product_true) OVER (partition BY test_type) AS normalized,\n    \n  FROM pdf_product\n  ORDER BY buckets\n)\nSELECT\n  buckets,\n  normalized,\n  test_type,\n\nFROM pdf_normalized",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "After BBR pipe full vs. full length test (Download Mbps PDF, normalized)",
      "type": "ae3e-plotly-panel"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 31
      },
      "id": 15,
      "panels": [],
      "title": "Data transferred",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-bigquery-datasource",
        "uid": "PB00E94094811FA13"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "MB Transferred",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 24,
        "x": 0,
        "y": 32
      },
      "id": 14,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "PB00E94094811FA13"
          },
          "editorMode": "code",
          "format": 0,
          "location": "",
          "project": "mlab-sandbox",
          "rawQuery": true,
          "rawSql": "WITH\n pt AS (\n SELECT\n   date, \n   CASE\n      WHEN (\"max_cwnd_gain\" IN (SELECT metadata.Name FROM UNNEST(raw.Download.ClientMetadata) AS metadata)) AND (\"early_exit\" IN (SELECT metadata.Name FROM UNNEST(raw.Download.ClientMetadata) AS metadata)) THEN \"BBR and 50MB\"\n      WHEN (\"max_cwnd_gain\" IN (SELECT metadata.Name FROM UNNEST(raw.Download.ClientMetadata) AS metadata)) AND (\"max_elapsed_time\" IN (SELECT metadata.Name FROM UNNEST(raw.Download.ClientMetadata) AS metadata)) THEN \"BBR and 5s\"\n      WHEN (\"early_exit\" IN (SELECT metadata.Name FROM UNNEST(raw.Download.ClientMetadata) AS metadata)) THEN \"50MB\"\n      WHEN (\"max_elapsed_time\" IN (SELECT metadata.Name FROM UNNEST(raw.Download.ClientMetadata) AS metadata)) THEN \"5s\"\n      ELSE \"BBR\"\n    END AS test_type,\n   ARRAY_REVERSE(raw.Download.ServerMeasurements)[SAFE_OFFSET(0)].TCPInfo.BytesAcked/1000000 AS totalMB\n FROM\n   `mlab-oti.raw_pt.ndt7`\n WHERE\n   date BETWEEN \"${__from:date:YYYY-MM-DD}\" AND \"${__to:date:YYYY-MM-DD}\"\n   AND raw.Download IS NOT NULL\n   AND ARRAY_LENGTH(raw.Download.ServerMeasurements) > 0 \n)\n\nSELECT TIMESTAMP(date) AS time, test_type AS metric, SUM(totalMB) / COUNT(*) AS avgMB\nFROM pt\nGROUP BY date, test_type\nORDER BY time ASC",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "PB00E94094811FA13"
          },
          "editorMode": "code",
          "format": 0,
          "hide": false,
          "location": "",
          "project": "mlab-sandbox",
          "rawQuery": true,
          "rawSql": "WITH\n ndt AS (\n SELECT\n   date, \n   \"Full length\" AS test_type,\n   ARRAY_REVERSE(raw.Download.ServerMeasurements)[SAFE_OFFSET(0)].TCPInfo.BytesAcked/1000000 AS totalMB\n FROM\n   `mlab-oti.ndt.ndt7`\n WHERE\n   date BETWEEN \"${__from:date:YYYY-MM-DD}\" AND \"${__to:date:YYYY-MM-DD}\"\n   AND raw.Download IS NOT NULL\n   AND ARRAY_LENGTH(raw.Download.ServerMeasurements) > 0 \n)\n\nSELECT TIMESTAMP(date) AS time, test_type AS metric, SUM(totalMB) / COUNT(*) AS avgMB\nFROM ndt\nGROUP BY date, test_type\nORDER BY time ASC",
          "refId": "B",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Amount of Data Transferred",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 43
      },
      "id": 3,
      "panels": [],
      "title": "Packet Pair",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-bigquery-datasource",
        "uid": "PB00E94094811FA13"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "stacking": {
              "group": "A",
              "mode": "none"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 12,
        "w": 24,
        "x": 0,
        "y": 44
      },
      "id": 4,
      "options": {
        "bucketOffset": 0,
        "bucketSize": 50,
        "legend": {
          "calcs": [
            "min",
            "mean",
            "max",
            "count"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "PB00E94094811FA13"
          },
          "editorMode": "code",
          "format": 1,
          "location": "",
          "project": "mlab-sandbox",
          "rawQuery": true,
          "rawSql": "SELECT m.Bandwidth \nFROM `raw_pt.pair1`, UNNEST(raw.Measurements) AS m\nWHERE date between \"${__from:date:YYYY-MM-DD}\" and \"${__to:date:YYYY-MM-DD}\"\nAND m.Packets[SAFE_OFFSET(0)].Gap = 0",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Bandwidth (Mbps)",
      "type": "histogram"
    },
    {
      "datasource": {
        "type": "grafana-bigquery-datasource",
        "uid": "PB00E94094811FA13"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 12,
        "x": 0,
        "y": 56
      },
      "id": 5,
      "options": {
        "displayLabels": [
          "name",
          "value"
        ],
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "values": [
            "value"
          ]
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "PB00E94094811FA13"
          },
          "editorMode": "code",
          "format": 1,
          "location": "",
          "project": "mlab-sandbox",
          "rawQuery": true,
          "rawSql": "SELECT CAST(p.Size AS string) As size, (COUNT(*)/(SUM(COUNT(*)) OVER())) * 100 AS Percent\nFROM `raw_pt.pair1`, UNNEST(raw.Measurements) AS m, UNNEST(m.Packets) AS p\nWHERE date between \"${__from:date:YYYY-MM-DD}\" and \"${__to:date:YYYY-MM-DD}\"\nGROUP BY size\nORDER BY Percent",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Packet size (bytes)",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "grafana-bigquery-datasource",
        "uid": "PB00E94094811FA13"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "blue",
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 12,
        "x": 12,
        "y": 56
      },
      "id": 9,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "PB00E94094811FA13"
          },
          "editorMode": "code",
          "format": 1,
          "location": "",
          "project": "mlab-sandbox",
          "rawQuery": true,
          "rawSql": "SELECT AVG(m.Bandwidth) AS avg_bandwidth, CAST(p.Size AS string) As size_bytes\nFROM `raw_pt.pair1`, UNNEST(raw.Measurements) AS m, UNNEST(m.Packets) AS p\nWHERE date between \"${__from:date:YYYY-MM-DD}\" and \"${__to:date:YYYY-MM-DD}\"\nGROUP BY size_bytes",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Average bandwidth (Mbps) for size (bytes)",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "grafana-bigquery-datasource",
        "uid": "PB00E94094811FA13"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 0,
        "y": 67
      },
      "id": 7,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "Gap"
          }
        ]
      },
      "pluginVersion": "11.1.3",
      "targets": [
        {
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "PB00E94094811FA13"
          },
          "editorMode": "code",
          "format": 1,
          "location": "",
          "project": "mlab-sandbox",
          "rawQuery": true,
          "rawSql": "SELECT p.Gap AS Gap, (COUNT(*)/(SUM(COUNT(*)) OVER())) * 100 AS Percent\nFROM `raw_pt.pair1`, UNNEST(raw.Measurements) AS m, UNNEST(m.Packets) AS p\nWHERE date between \"${__from:date:YYYY-MM-DD}\" and \"${__to:date:YYYY-MM-DD}\"\nAND gap IS NOT NULL\nGROUP BY Gap",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Gap size (microseconds)",
      "type": "table"
    },
    {
      "datasource": {
        "type": "grafana-bigquery-datasource",
        "uid": "PB00E94094811FA13"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 12,
        "x": 12,
        "y": 67
      },
      "id": 10,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "PB00E94094811FA13"
          },
          "editorMode": "code",
          "format": 1,
          "location": "",
          "project": "mlab-sandbox",
          "rawQuery": true,
          "rawSql": "SELECT AVG(m.Bandwidth) AS avg_bandwidth, CAST(p.Gap AS string) As gap_usecs\nFROM `raw_pt.pair1`, UNNEST(raw.Measurements) AS m, UNNEST(m.Packets) AS p\nWHERE date between \"${__from:date:YYYY-MM-DD}\" and \"${__to:date:YYYY-MM-DD}\"\nGROUP BY gap_usecs",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Average bandwidth (Mbps) for gap (microseconds)",
      "type": "barchart"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 78
      },
      "id": 2,
      "panels": [],
      "title": "Packet Train",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-bigquery-datasource",
        "uid": "PB00E94094811FA13"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "stacking": {
              "group": "A",
              "mode": "none"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 14,
        "w": 24,
        "x": 0,
        "y": 79
      },
      "id": 1,
      "options": {
        "bucketOffset": 0,
        "bucketSize": 50,
        "legend": {
          "calcs": [
            "min",
            "mean",
            "max",
            "count"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "PB00E94094811FA13"
          },
          "editorMode": "code",
          "format": 1,
          "location": "",
          "project": "mlab-sandbox",
          "rawQuery": true,
          "rawSql": "SELECT m.Bandwidth \nFROM `raw_pt.train1`, UNNEST(raw.Measurements) AS m\nWHERE date between \"${__from:date:YYYY-MM-DD}\" and \"${__to:date:YYYY-MM-DD}\"",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Bandwidth (Mbps)",
      "type": "histogram"
    },
    {
      "datasource": {
        "type": "grafana-bigquery-datasource",
        "uid": "PB00E94094811FA13"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 0,
        "y": 93
      },
      "id": 6,
      "options": {
        "displayLabels": [
          "name",
          "value"
        ],
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "values": [
            "value"
          ]
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "10.2.2",
      "targets": [
        {
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "PB00E94094811FA13"
          },
          "editorMode": "code",
          "format": 1,
          "location": "",
          "project": "mlab-sandbox",
          "rawQuery": true,
          "rawSql": "SELECT CAST(p.Size AS string) As size, (COUNT(*)/(SUM(COUNT(*)) OVER())) * 100 AS Percent\nFROM `raw_pt.train1`, UNNEST(raw.Measurements) AS m, UNNEST(m.Packets) AS p\nWHERE date between \"${__from:date:YYYY-MM-DD}\" and \"${__to:date:YYYY-MM-DD}\"\nGROUP BY size\nORDER BY Percent",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Packet size (bytes)",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "grafana-bigquery-datasource",
        "uid": "PB00E94094811FA13"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 12,
        "y": 93
      },
      "id": 8,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "11.1.3",
      "targets": [
        {
          "datasource": {
            "type": "grafana-bigquery-datasource",
            "uid": "PB00E94094811FA13"
          },
          "editorMode": "code",
          "format": 1,
          "location": "",
          "project": "mlab-sandbox",
          "rawQuery": true,
          "rawSql": "SELECT p.Gap AS Gap, (COUNT(*)/(SUM(COUNT(*)) OVER())) * 100 AS Percent\nFROM `raw_pt.train1`, UNNEST(raw.Measurements) AS m, UNNEST(m.Packets) AS p\nWHERE date between \"${__from:date:YYYY-MM-DD}\" and \"${__to:date:YYYY-MM-DD}\"\nAND gap IS NOT NULL\nGROUP BY Gap",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Gap size (microseconds)",
      "type": "table"
    }
  ],
  "refresh": "",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-7d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Packet Testing",
  "uid": "d341c044-4e2c-4904-b05f-98e8bf1bbf32",
  "version": 26,
  "weekStart": ""
}
