# M-Lab prometheus recording rules.
#
# Before adding a new recording rule, review the general documentation and best
# practices.
#
#  * https://prometheus.io/docs/querying/rules/
#  * https://prometheus.io/docs/practices/rules/
#
# NOTE: As of 2017-11, the Prometheus v1.x series evaluates all rules in
# parallel. So, rule evaluation order is not guaranteed, and dependencies
# between rules are not respected. Using recording rules on the right hand
# side of an expression can have undefined behavior and may result in recording
# old data or other errors. This is also true for Alerts. This limitation is
# fixed in the Prometheus v2.x series.
#
# TODO: Prometheus v2.x rules are evaluated in order.
#
#    https://github.com/prometheus/prometheus/blob/v1.8.2/rules/manager.go#L254
#
# DO:
#  * Do use raw prometheus expressions on the right hand side of a new rule.
#  * "Recording rules should be of the general form level:metric:operations."
#  * Do use irate with a range that is 4x scrape_interval.
#
# DO NOT:
#  * Do not use recording rules on the right hand side of a new rule.
#  * Do not overwrite a metric name with itself.
#  * Do not use 'label_replace' to overwrite a metric name.
#  * Do not use rate with a range less than 4x the scrape_interval.
#
##############################################################################
# TODO: remove rules that are not actively used.
##############################################################################

groups:
- name: rules.yml
  rules:

## Parser volume checks.
#
# This rule optimizes the alert query used for ParserDailyVolumeTooLow. Rather
# than calculate multi-day values continuously, this rule will maintain a history
# of the precalculated value needed by the rule.
  - record: candidate_service:etl_test_count:increase24h
    expr: sum by(service) (increase(etl_test_count{service!~".*batch.*",status="ok"}[1d]))
