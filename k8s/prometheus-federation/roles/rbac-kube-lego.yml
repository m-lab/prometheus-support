# ClusterRole for kube-lego, which watches for properly annotated services and 
# automatically generates TLS certificates for them via LetsEncrypt, then 
# configures an ingress for them with those certificates.
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: kube-lego
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - create
  - get
  - delete
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - update
  - create
  - list
  - patch
  - delete
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - update
---
# A ServiceAccount under which kube-lego runs.
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-lego
  namespace: default
---
# Bind the kube-lego ServiceAccount to the ClusterRole above.
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: kube-lego
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-lego
subjects:
  - kind: ServiceAccount
    name: kube-lego
    namespace: default
