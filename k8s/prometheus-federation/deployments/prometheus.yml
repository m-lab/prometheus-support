apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: prometheus-server
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      # Used to match pre-existing pods that may be affected during updates.
      run: prometheus-server
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  # Pod template.
  template:
    metadata:
      labels:
        # Note: run=prometheus-server should match a service config with a
        # public IP and port so that it is publically accessible.
        run: prometheus-server
      annotations:
        # Tell prometheus service discovery to scrape the pod containers.
        prometheus.io/scrape: 'true'
    spec:
      # References a service account with RBAC permissions for accessing node
      # metrics. This is required for k8s version 1.6+.
      serviceAccountName: prometheus

      # Clusters running a prometheus instance must label nodes exclusively for
      # use by prometheus. See README for steps to create a GKE cluster for
      # prometheus.
      nodeSelector:
        prometheus-node: 'true'

      # When prometheus receives SIGTERM, it begins a new checkpoint. This can
      # take longer than the default grace period of 30s.
      terminationGracePeriodSeconds: 240

      # Place the pod into the Guaranteed QoS by setting equal resource
      # requests and limits for *all* containers in the pod.
      # For more background, see:
      # https://github.com/kubernetes/community/blob/master/contributors/design-proposals/resource-qos.md
      containers:
      # Check https://hub.docker.com/r/prom/prometheus/tags/ for the current
      # stable version.
      - image: prom/prometheus:v2.4.2
        # Note: the container name appears to be ignored and the actual pod name
        # is derived from the Deployment.metadata.name. However, removing this
        # value results in a configuration error.
        name: prometheus
        # Note: Set retention time to 120 days. (default retention is 30d).
        args: ["--config.file=/etc/prometheus/prometheus.yml",
               "--storage.tsdb.path=/prometheus",
               "--storage.tsdb.retention=2880h",
               "--web.enable-lifecycle",
               "--web.external-url=https://prometheus.{{GCLOUD_PROJECT}}.measurementlab.net"]
        ports:
          - containerPort: 9090
        resources:
          requests:
            memory: "{{PROMETHEUS_RAM}}"
            cpu: "{{PROMETHEUS_CPU}}"
          limits:
            memory: "{{PROMETHEUS_RAM}}"
            cpu: "{{PROMETHEUS_CPU}}"
        volumeMounts:
        # /prometheus stores all metric data. Declared as VOLUME in base image.
        - mountPath: /prometheus
          name: prometheus-storage
          subPath: prometheus-data2
        # /legacy-targets should contain legacy target configuration files.
        - mountPath: /legacy-targets
          name: prometheus-storage
          subPath: legacy-targets
        # /federation-targets should contain federation target config files.
        - mountPath: /federation-targets
          name: prometheus-storage
          subPath: federation-targets
        # /blackbox-targets should contain blackbox target config files.
        - mountPath: /blackbox-targets
          name: prometheus-storage
          subPath: blackbox-targets
        # /blackbox-targets-ipv6 should contain blackbox IPv6 target files.
        - mountPath: /blackbox-targets-ipv6
          name: prometheus-storage
          subPath: blackbox-targets-ipv6
        # /aeflex-targets should contain AppEngine target config files.
        - mountPath: /aeflex-targets
          name: prometheus-storage
          subPath: aeflex-targets
        # /snmp-targets should contain snmp_exporter target config files.
        - mountPath: /snmp-targets
          name: prometheus-storage
          subPath: snmp-targets
        # /script-targets should contain script_exporter target config files.
        - mountPath: /script-targets
          name: prometheus-storage
          subPath: script-targets
        # /slow-targets should contain slow target config files.
        - mountPath: /slow-targets
          name: prometheus-storage
          subPath: slow-targets
        # /bmc-targets should contain BMC target config files.
        - mountPath: /bmc-targets
          name: prometheus-storage
          subPath: bmc-targets
        # /etc/prometheus/prometheus.yml contains the M-Lab Prometheus config.
        - mountPath: /etc/prometheus
          name: prometheus-config

      # Run a node-exporter as part of the prometheus-server pod so that it has
      # access to the same namespace and volumes as the prometheus-server. This
      # allows simple disk usage monitoring of the "/prometheus" mount point.
      - image: prom/node-exporter:v0.13.0
        name: node-exporter
        # Note: only enable the filesystem collector, and ignore system paths.
        args: [ "--collectors.enabled=filesystem",
                "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($|/)"]
        ports:
          - containerPort: 9100
        resources:
          requests:
            memory: "10Mi"
            cpu: "50m"
          limits:
            memory: "10Mi"
            cpu: "50m"
        volumeMounts:
        - mountPath: /prometheus
          name: prometheus-storage

      - image: measurementlab/gcp-service-discovery:v1.5.0
        name: service-discovery
        args: [ "--aef-target=/targets/aeflex-targets/aeflex.json",
                "--gke-target=/targets/federation-targets/prometheus-clusters.json",
                "--http-target=/targets/legacy-targets/sidestream.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/legacy-targets/sidestream.json",
                "--http-target=/targets/legacy-targets/nodeexporter.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/legacy-targets/nodeexporter.json",
                "--http-target=/targets/blackbox-targets/ssh806.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/blackbox-targets/ssh806.json",
                "--http-target=/targets/blackbox-targets-ipv6/ssh806_ipv6.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/blackbox-targets-ipv6/ssh806_ipv6.json",
                "--http-target=/targets/blackbox-targets/ssh.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/blackbox-targets/ssh.json",
                "--http-target=/targets/blackbox-targets-ipv6/ssh_ipv6.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/blackbox-targets-ipv6/ssh_ipv6.json",
                "--http-target=/targets/blackbox-targets/rsyncd.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/blackbox-targets/rsyncd.json",
                "--http-target=/targets/snmp-targets/snmpexporter.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/snmp-targets/snmpexporter.json",
                "--http-target=/targets/script-targets/ndt_e2e.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/script-targets/ndt_e2e.json",
                "--http-target=/targets/script-targets/ndt_queue.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/script-targets/ndt_queue.json",
                "--http-target=/targets/blackbox-targets/ndt_raw.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/blackbox-targets/ndt_raw.json",
                "--http-target=/targets/blackbox-targets-ipv6/ndt_raw_ipv6.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/blackbox-targets-ipv6/ndt_raw_ipv6.json",
                "--http-target=/targets/blackbox-targets/ndt_ssl.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/blackbox-targets/ndt_ssl.json",
                "--http-target=/targets/blackbox-targets-ipv6/ndt_ssl_ipv6.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/blackbox-targets-ipv6/ndt_ssl_ipv6.json",
                "--http-target=/targets/legacy-targets/ndt_inotify.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/legacy-targets/ndt_inotify.json",
                "--http-target=/targets/blackbox-targets/ndt7.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/blackbox-targets/ndt7.json",
                "--http-target=/targets/blackbox-targets-ipv6/ndt7_ipv6.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/blackbox-targets-ipv6/ndt7_ipv6.json",
                "--http-target=/targets/blackbox-targets/mobiperf.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/blackbox-targets/mobiperf.json",
                "--http-target=/targets/blackbox-targets-ipv6/mobiperf_ipv6.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/blackbox-targets-ipv6/mobiperf_ipv6.json",
                "--http-target=/targets/blackbox-targets/neubot.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/blackbox-targets/neubot.json",
                "--http-target=/targets/blackbox-targets-ipv6/neubot_ipv6.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/blackbox-targets-ipv6/neubot_ipv6.json",
                "--http-target=/targets/blackbox-targets/switches_ping.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/blackbox-targets/switches_ping.json",
                "--http-target=/targets/bmc-targets/bmc_e2e.json",
                "--http-source=https://storage.googleapis.com/operator-{{GCLOUD_PROJECT}}/prometheus/bmc-targets/bmc_e2e.json",
                "--project={{GCLOUD_PROJECT}}"]
        ports:
          - containerPort: 9373
        resources:
          requests:
            memory: "150Mi"
            cpu: "150m"
          limits:
            memory: "150Mi"
            cpu: "150m"
        volumeMounts:
        # Mount the the prometheus-storage for write access to the target
        # directories.
        - mountPath: /targets
          name: prometheus-storage

      # Check https://hub.docker.com/r/jimmidyson/configmap-reload/tags/ for the current
      # stable version.
      - image: jimmidyson/configmap-reload:v0.2.2
        name: configmap-reload
        args: ["-webhook-url", "http://prometheus-service.default.svc.cluster.local:9090/-/reload",
               "-volume-dir", "/prometheus-config"]
        env:
        - name: PROM_RELOAD_URL
          valueFrom:
            configMapKeyRef:
              name: configmap-reload-urls
              key: prometheus_reload_url
        resources:
          requests:
            memory: "400Mi"
            cpu: "200m"
          limits:
            memory: "400Mi"
            cpu: "200m"
        volumeMounts:
        # Mount the prometheus config volume so we can watch it for changes.
        - mountPath: /prometheus-config
          name: prometheus-config

      # Disks created manually, can be named here explicitly using
      # gcePersistentDisk instead of the persistentVolumeClaim.
      volumes:
      - name: prometheus-storage
        persistentVolumeClaim:
          claimName: auto-prometheus-disk0
      - name: prometheus-config
        configMap:
          name: prometheus-federation-config
